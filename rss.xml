<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Programação e Carreira Blog</title>
        <link>https://mrbrunelli.github.io/blog/</link>
        <description>Programação e Carreira Blog</description>
        <lastBuildDate>Thu, 16 Dec 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Como contornar a dor de escrever um teste unitário?]]></title>
            <link>https://mrbrunelli.github.io/blog/como-contornar-a-dor-de-escrever-um-teste-unitário</link>
            <guid>como-contornar-a-dor-de-escrever-um-teste-unitário</guid>
            <pubDate>Thu, 16 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[TDD Banner]]></description>
            <content:encoded><![CDATA[<p><img alt="TDD Banner" src="/blog/assets/images/tdd-fbd2a93ec4b76fcef18c1b3a10e68bbf.jpeg" width="535" height="311"></p><p>Salve galera, tudo tranquilo? Esse é meu segundo artigo, e gostaria de compartilhar algo que vem me ajudando muito durante o desenvolvimento de software e na minha própria evolução profissional.</p><p>Estou falando sobre os <strong>testes unitários</strong>. Acredito que todo mundo concorda que um código sem testes, é um código instável e frágil à mudanças. É muito ruim programar no escuro, nós nunca temos certeza que o que estamos desenvolvendo irá funcionar em produção, sem conflitar com as features já existentes.</p><p>Por outro lado, escrever testes para uma feature já implementada pode ser algo muito doloroso, por isso <strong>muita gente prefere correr o risco e deixar o código sem cobertura.</strong></p><p>Mas recentemente venho estudando fortemente uma metodologia que abriu minha mente, o <strong>TDD</strong>, ou em português <strong>"Desenvolvimento guiado por testes"</strong>. No TDD nós criamos o teste primeiro, e só depois criamos a implementação de fato, que fará o teste passar. Isso faz com que nosso código sempre esteja coberto por testes.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="traduzindo">Traduzindo<a class="hash-link" href="#traduzindo" title="Link direto para o título">​</a></h2><p>Se eu quisesse criar uma função que me retornasse o maior número de uma lista em Javascript, utilizando o <strong>TDD</strong> (escrevendo o teste primeiro), eu começaria fazendo algo mais ou menos assim:</p><div class="codeBlockContainer_I0IT language-js theme-code-block"><div class="codeBlockContent_wNvx js"><pre tabindex="0" class="prism-code language-js codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Arquivo: pegueOMaiorNumero.test.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Sintaxe de um framework de testes do Javascript</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"pegueOMaiorNumero"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"deve retornar o maior número de uma lista"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> maiorNumero </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">pegueOMaiorNumero</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">21</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">maiorNumero</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">21</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copiar código para a área de transferência" class="copyButton_wuS7 clean-btn">Copiar</button></div></div><p>Nesse caso, eu forneci uma lista com alguns números, onde o 21 é o maior deles. Mas note que em nenhum momento foi criada a função <strong>pegueOMaiorNumero</strong>. Estou invocando uma função que <strong>ainda não foi criada</strong>, e ainda estou esperando que o resultado seja 21. Nesse caso o teste irá falhar.</p><p>É ai que a brincadeira começa. Quando o teste falha, é sinal de que precisamos implementar a feature que faça esse teste passar.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="então-vamos-lá">Então vamos lá!<a class="hash-link" href="#então-vamos-lá" title="Link direto para o título">​</a></h2><p>Vou criar a função que fará o teste passar:</p><div class="codeBlockContainer_I0IT language-js theme-code-block"><div class="codeBlockContent_wNvx js"><pre tabindex="0" class="prism-code language-js codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Arquivo: pegueOMaiorNumero.test.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">pegueOMaiorNumero</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">numeros</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> maior </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> numeros</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">numeros</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> maior</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      maior </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> numeros</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> maior</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"pegueOMaiorNumero"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"deve retornar o maior número de uma lista"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> maiorNumero </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">pegueOMaiorNumero</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">21</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">maiorNumero</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">21</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copiar código para a área de transferência" class="copyButton_wuS7 clean-btn">Copiar</button></div></div><p>Agora o teste começará a passar. Veja que o algoritmo não ficou dos melhores, mas conseguiu satisfazer o que o teste pediu. Agora que o teste está passando, posso refatorar a função <strong>pegueOMaiorNumero</strong> sem medo, pois ela está coberta por um teste. Caso a função passe a retornar uma string, null, ou um número que não seja o maior, <strong>o teste irá me avisar, reprovando</strong>.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="vamos-refatorar-sem-medo">Vamos refatorar, sem medo!<a class="hash-link" href="#vamos-refatorar-sem-medo" title="Link direto para o título">​</a></h2><div class="codeBlockContainer_I0IT language-js theme-code-block"><div class="codeBlockContent_wNvx js"><pre tabindex="0" class="prism-code language-js codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Arquivo: pegueOMaiorNumero.test.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">pegueOMaiorNumero</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">numeros</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token known-class-name class-name">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">numeros</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"pegueOMaiorNumero"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"deve retornar o maior número de uma lista"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> maiorNumero </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">pegueOMaiorNumero</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">9</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">15</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">21</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">maiorNumero</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">21</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><button type="button" aria-label="Copiar código para a área de transferência" class="copyButton_wuS7 clean-btn">Copiar</button></div></div><p>Pronto, se a gente rodar esse teste, ele irá continuar passando, pois o <strong>Math.max</strong> está fazendo o mesmo que o <strong>laço de repetição</strong> estava fazendo anteriormente, mas de uma maneira mais enxuta. O fato é que, temos confiança de alterar um código que nos fale se a nossa regra de negócios falhou. <strong>É inadmissível</strong> que nossa função <strong>pegueOMariorNumero</strong> retorne um número que não é o maior.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="conclusão">Conclusão<a class="hash-link" href="#conclusão" title="Link direto para o título">​</a></h2><p>Nossa simples feature de retornar o maior número, <strong>esteve durante todo o tempo de desenvolvimento coberta por um teste</strong>. Se a gente fizesse a feature primeiro ao invés do teste, teríamos que testá-la manualmente a cada alteração, printando o resultado no console, até de fato escrever um teste pra ela. Isso seria <strong>cansativo</strong>. O teste é automatizado, ou seja, escrevemos uma única vez, e ele sempre irá assegurar o resultado pra gente.</p><p>Escolhi esse exemplo de algoritmo, pois há várias formas de implementá-lo. Caso você descubra alguma forma mais enxuta que essa apresentada, poderá implementar sem correr o risco de quebrar sua aplicação.</p><p>Como material complementar, recomendo essa live que aconteceu no dia 09/12/2021, e que considero excepcional por <strong>dois motivos: não tem enrolação, e os caras sabem o que estão ensinando.</strong> Por hoje é isso, forte abraço e até a próxima!</p><p><a href="https://youtu.be/sg1zFpNM5Jw" target="_blank" rel="noopener noreferrer"><img src="https://img.youtube.com/vi/sg1zFpNM5Jw/0.jpg" alt="Live TDD na prática - Diego Fernandes e Rodrigo Manguinho"></a></p><p>Repositório código fonte: <a href="https://github.com/mrbrunelli/tdd-pega-o-maior-numero" target="_blank" rel="noopener noreferrer">https://github.com/mrbrunelli/tdd-pega-o-maior-numero</a></p>]]></content:encoded>
            <category>tdd</category>
            <category>testes</category>
            <category>teste unitário</category>
        </item>
        <item>
            <title><![CDATA[O impacto da educação em minha vida]]></title>
            <link>https://mrbrunelli.github.io/blog/o-impacto-da-educação-em-minha-vida</link>
            <guid>o-impacto-da-educação-em-minha-vida</guid>
            <pubDate>Fri, 07 May 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Education Banner]]></description>
            <content:encoded><![CDATA[<p><img alt="Education Banner" src="/blog/assets/images/education-b10b3c1f8adccbed991bcf30d07ae738.jpeg" width="1400" height="600"></p><p>Ontem enquanto organizava minha gaveta, me deparei com minha certidão de casamento, onde estava escrito na primeira linha:</p><blockquote><p>MATHEUS RICARDO BRUNELLI, brasileiro, de profissão: Auxiliar de Produção. Ano 2018.</p></blockquote><p>Meu último emprego antes de me tornar Desenvolvedor em 2019 era de Auxiliar de Produção em uma fábrica aqui da cidade. O trabalho era muito simples, porem muito desgastante, Dorflex e Torsilax (não é propaganda) faziam parte da minha intensa semana.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="tecnologia-uma-realidade-crescente">Tecnologia, uma realidade crescente<a class="hash-link" href="#tecnologia-uma-realidade-crescente" title="Link direto para o título">​</a></h3><p>Certo dia a fábrica inteira parou para ouvir o anúncio dos coordenadores das faculdades da região, e foi anunciado dentre os demais cursos o curso de Sistemas para Internet, e a fala do coordenador <a href="https://www.linkedin.com/in/profburnes" target="_blank" rel="noopener noreferrer">Anderson Burnes</a> (que eu já conhecia) foi muito convincente, pois naquele ano várias empresas estavam passando por transformação digital, e estavam precisando de desenvolvedores qualificados, e os salários eram bem diferentes da minha realidade.</p><p>Eu trabalhava muito para conseguir sustentar a minha família (eu, esposa e os doguinhos) e mesmo assim não era suficiente, um pneu furado ou uma gripe eram suficientes para acabar com nossas economias do mês rsrs.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="educação-um-investimento-muito-rentável">Educação, um investimento muito rentável<a class="hash-link" href="#educação-um-investimento-muito-rentável" title="Link direto para o título">​</a></h3><p>Eu sabia que o único caminho para uma mudança de vida, era através da educação. E naquele ano estudei muito para o Enem, e consegui uma Bolsa ProUni para o curso de Sistemas para Internet na <a href="https://www.alfaumuarama.edu.br/fau" target="_blank" rel="noopener noreferrer">UniAlfa</a>.</p><p>Me lembro que dessa vez eu não estava apenas fazendo um curso por fazer, eu estava colocando todas minhas energias em algo que eu acreditava poder mudar minha vida.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="esforço-no-lugar-certo">Esforço no lugar certo<a class="hash-link" href="#esforço-no-lugar-certo" title="Link direto para o título">​</a></h3><p>Durante os primeiros semestres, percebi que existiam muitos caminhos para seguir profissão, alguns bem confusos, e eu precisaria ter foco em algo para poder me destacar. Comecei a pesquisar por tecnologias que me ajudariam a entrar no mercado mais rápido, pois essa era minha maior motivação.</p><p>Quando obtive um mínimo de confiança nessas tecnologias, pedi demissão do meu emprego na fábrica, para que eu pudesse me dedicar aos estudos de forma integral. Minha família ficou com muito medo da minha decisão, afinal, não haviam garantias que eu conseguiria entrar na área, antes da nossa minúscula reserva financeira acabar.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="fé-foco-e-medo">Fé, foco e medo<a class="hash-link" href="#fé-foco-e-medo" title="Link direto para o título">​</a></h3><p>Foram esses três elementos que me acompanharam nessa transição. Fé porque nós não enxergamos o amanhã. Foco porque o tempo é escasso. Medo porque ele funciona como uma balança, quanto mais arriscado, mais sentimos medo.</p><p>Como todo trabalhado duro traz recompensas, a minha chegou aos 45 do segundo tempo, quando só restavam algumas moedinhas no cofre. Consegui meu primeiro emprego na área, graças ao networking (vou escrever um artigo só desse cara) e ao meu esforço é claro.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="mercado-aquecido">Mercado aquecido<a class="hash-link" href="#mercado-aquecido" title="Link direto para o título">​</a></h3><p>Se eu pudesse deixar um conselho para quem está começando, seria:</p><blockquote><p>Estude, e faça de tudo para tentar entrar no mercado. Tenha foco, e invista seu tempo estudando o que te dará retorno.</p></blockquote><p>Nem só de teoria vive o programador. Essa é uma profissão muito prática, quanto mais se exercita, mais se aprende. Os melhores exercícios são problemas reais de uma empresa. Mesmo que ganhando pouco no começo, trabalhar com problemas reais não tem preço, essa experiência não pode ser adquirida de outra forma.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="considerações-finais">Considerações finais<a class="hash-link" href="#considerações-finais" title="Link direto para o título">​</a></h3><p>Esse foi meu primeiro artigo, fiquei muito empolgado ao escrevê-lo. Se você chegou até aqui, meus agradecimentos. Espero que tenha sido útil para você.</p><p>Forte abraço, e até o próximo artigo!</p>]]></content:encoded>
            <category>educação</category>
            <category>a importancia da educação</category>
            <category>aprendizado</category>
        </item>
    </channel>
</rss>