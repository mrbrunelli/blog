"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[336],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return d}});var r=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)o=n[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(o),d=a,g=m["".concat(u,".").concat(d)]||m[d]||c[d]||n;return o?r.createElement(g,s(s({ref:t},p),{},{components:o})):r.createElement(g,s({ref:t},p))}));function d(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,s=new Array(n);s[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<n;l++)s[l]=o[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},9218:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},assets:function(){return p},toc:function(){return c},default:function(){return d}});var r=o(7462),a=o(3366),n=(o(7294),o(3905)),s=["components"],i={slug:"aprenda-a-testar-pt2",title:"Aprenda a escrever testes - Parte 2",description:"Como utilizar um framework de testes no Node?",keywords:["teste","cobertura","qualidade","testes automatizados","vitest"],image:"/img/test.jpg",tags:["teste","cobertura","qualidade","testes automatizados","vitest"],authors:"brunelli"},u=void 0,l={permalink:"/blog/en/aprenda-a-testar-pt2",editUrl:"https://github.com/mrbrunelli/blog/tree/master/blog/2022-10-19-aprenda-a-testar-pt2/index.md",source:"@site/blog/2022-10-19-aprenda-a-testar-pt2/index.md",title:"Aprenda a escrever testes - Parte 2",description:"Como utilizar um framework de testes no Node?",date:"2022-10-19T00:00:00.000Z",formattedDate:"October 19, 2022",tags:[{label:"teste",permalink:"/blog/en/tags/teste"},{label:"cobertura",permalink:"/blog/en/tags/cobertura"},{label:"qualidade",permalink:"/blog/en/tags/qualidade"},{label:"testes automatizados",permalink:"/blog/en/tags/testes-automatizados"},{label:"vitest",permalink:"/blog/en/tags/vitest"}],readingTime:4.135,truncated:!0,authors:[{name:"Matheus R. Brunelli",title:"Desenvolvedor de software",url:"https://github.com/mrbrunelli",imageURL:"https://avatars.githubusercontent.com/u/54479807?v=4&s=128",key:"brunelli"}],frontMatter:{slug:"aprenda-a-testar-pt2",title:"Aprenda a escrever testes - Parte 2",description:"Como utilizar um framework de testes no Node?",keywords:["teste","cobertura","qualidade","testes automatizados","vitest"],image:"/img/test.jpg",tags:["teste","cobertura","qualidade","testes automatizados","vitest"],authors:"brunelli"},nextItem:{title:"Aprenda a escrever testes - Parte 1",permalink:"/blog/en/aprenda-a-testar-pt1"}},p={authorsImageUrls:[void 0]},c=[{value:"Como escolher um framework de testes?",id:"como-escolher-um-framework-de-testes",children:[],level:2},{value:"Configurando o projeto",id:"configurando-o-projeto",children:[{value:"Setup Node + Typescript",id:"setup-node--typescript",children:[],level:3},{value:"Setup Vitest",id:"setup-vitest",children:[],level:3},{value:"Configurando o package.json",id:"configurando-o-packagejson",children:[],level:3}],level:2},{value:"Escrevendo o primeiro teste",id:"escrevendo-o-primeiro-teste",children:[{value:"Sucesso",id:"sucesso",children:[],level:3},{value:"Erro",id:"erro",children:[],level:3}],level:2},{value:"Resumo",id:"resumo",children:[{value:"Reposit\xf3rio com o c\xf3digo",id:"reposit\xf3rio-com-o-c\xf3digo",children:[],level:3}],level:2}],m={toc:c};function d(e){var t=e.components,i=(0,a.Z)(e,s);return(0,n.kt)("wrapper",(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Como configurar e utilizar um framework de testes no Node utilizando Typescript? Temos v\xe1rias op\xe7\xf5es excelentes para isso, e por esse motivo irei escolher a mais f\xe1cil para o cen\xe1rio de Node + Typescript."),(0,n.kt)("h2",{id:"como-escolher-um-framework-de-testes"},"Como escolher um framework de testes?"),(0,n.kt)("p",null,"Primeiro devo avaliar quais os cen\xe1rios quero testar, se \xe9 frontend ou backend, e se vou utilizar Javascript ou Typescript."),(0,n.kt)("p",null,"Vou utilizar Node + Typescript nos exemplos, e isso faz a minha lista ficar restrita a alguns nomes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://jestjs.io/pt-BR/"},"Jest")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://mochajs.org/"},"Mocha")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://vitest.dev/"},"Vitest"))),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Jest e Mocha necessitam de um parser de Typescript para executar, como o ts-jest ou ts-node, o que pode complicar para quem est\xe1 come\xe7ando, j\xe1 que o arquivo de configura\xe7\xe3o fica muito complexo nesses cen\xe1rios.")),(0,n.kt)("p",null,"N\xe3o quero abrir m\xe3o do Typescript e nem da facilidade de configura\xe7\xe3o, ent\xe3o irei escolher o Vitest. Na p\xe1gina inicial do Vitest cont\xe9m o ",(0,n.kt)("a",{parentName:"p",href:"https://vitest.dev/guide/"},"Get Started")," contendo alguns exemplos de instala\xe7\xe3o e configura\xe7\xe3o."),(0,n.kt)("h2",{id:"configurando-o-projeto"},"Configurando o projeto"),(0,n.kt)("h3",{id:"setup-node--typescript"},"Setup Node + Typescript"),(0,n.kt)("p",null,"Vou criar uma pasta vazia, com um nome qualquer."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir vitest-typescript-example\n")),(0,n.kt)("p",null,"Com o meu Visual Studio Code aberto nessa pasta, vou abrir um terminal integrado e iniciar o Node, e instalar as depend\xeancias b\xe1sicas para o Typescript funcionar."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"npm init -y\n\nnpm install -D typescript @types/node\n")),(0,n.kt)("p",null,"Agora vou criar o tsconfig.json, que \xe9 o arquivo de configura\xe7\xe3o do Typescript. Ele ir\xe1 gerar uma configura\xe7\xe3o default, e vou manter ela."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"npx tsc --init\n")),(0,n.kt)("p",null,"Pronto, meu projeto j\xe1 est\xe1 configurado com Node + Typescript."),(0,n.kt)("h3",{id:"setup-vitest"},"Setup Vitest"),(0,n.kt)("p",null,"Agora vou instalar o Vitest como depend\xeancia de desenvolvimento."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"npm install -D vitest\n")),(0,n.kt)("p",null,"O Vitest precisa de um arquivo de configura\xe7\xe3o para poder executar. Na pr\xf3pria documenta\xe7\xe3o tem um exemplo simples. Vou criar um arquivo ",(0,n.kt)("strong",{parentName:"p"},"vitest.config.ts")," na raiz, e adicionar a configura\xe7\xe3o b\xe1sica."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="vitest.config.ts"',title:'"vitest.config.ts"'},'import { defineConfig } from "vitest/config";\n\nexport default defineConfig({\n  test: {\n    reporters: "verbose",\n  },\n});\n')),(0,n.kt)("p",null,"Veja como o arquivo de configura\xe7\xe3o \xe9 enxuto, bem diferente dos outros frameworks citados no come\xe7o do post. ",(0,n.kt)("a",{parentName:"p",href:"https://vitest.dev/config/"},"Na documenta\xe7\xe3o tenho acesso a API"),", e como posso personalizar o ",(0,n.kt)("strong",{parentName:"p"},"defineConfig()"),". N\xe3o vou configurar nada extra, j\xe1 est\xe1 \xf3timo como est\xe1."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Veja que configurei ",(0,n.kt)("strong",{parentName:"p"},"reporters")," como ",(0,n.kt)("strong",{parentName:"p"},"verbose"),", isso para que eu possa obter todas as informa\xe7\xf5es do teste no terminal.")),(0,n.kt)("h3",{id:"configurando-o-packagejson"},"Configurando o package.json"),(0,n.kt)("p",null,"Quando eu executei o ",(0,n.kt)("strong",{parentName:"p"},"npm init -y"),", foi gerado um arquivo ",(0,n.kt)("strong",{parentName:"p"},"package.json")," na raiz, com algumas configura\xe7\xf5es bem simples. Dentro de ",(0,n.kt)("strong",{parentName:"p"},"scripts")," tem um script ",(0,n.kt)("strong",{parentName:"p"},"test"),". Vou edit\xe1-lo."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'...\n"scripts": {\n    "test": "vitest --run"\n}\n...\n')),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Agora quando eu executar ",(0,n.kt)("inlineCode",{parentName:"p"},"npm run test")," no terminal, o vitest ir\xe1 executar meus testes. Como n\xe3o temos nenhum teste no momento, ele tentar\xe1 rodar e retornar\xe1 um erro dizendo que nenhum teste foi encontrado.")),(0,n.kt)("h2",{id:"escrevendo-o-primeiro-teste"},"Escrevendo o primeiro teste"),(0,n.kt)("p",null,"Vou criar uma pasta ",(0,n.kt)("strong",{parentName:"p"},"test")," na raiz, e criar um arquivo chamado ",(0,n.kt)("strong",{parentName:"p"},"primeiro-teste.test.ts")," dentro dela. Em seguida irei adicionar alguns cen\xe1rios."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\xc9 importante respeitar a extens\xe3o ",(0,n.kt)("strong",{parentName:"p"},".test.ts"),", pois o Vitest procura por essa extens\xe3o durante a execu\xe7\xe3o.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="primeiro-teste.test.ts"',title:'"primeiro-teste.test.ts"'},'import { describe, test, expect } from "vitest";\n\ndescribe("Cont\xe9m um conjunto de testes, que ser\xe1 executado um a um", () => {\n  test("Deve somar 20 + 50 e retornar 70", () => {\n    expect(20 + 50).toBe(70);\n  });\n\n  test("Deve concatenar a palavra \'Ol\xe1\' com a palavra \'Mundo\' e retornar \'Ol\xe1 Mundo\'", () => {\n    expect("Ol\xe1 " + "Mundo").toBe("Ol\xe1 Mundo");\n  });\n\n  test("Deve retornar que o Palmeiras n\xe3o tem mundial", () => {\n    const temMundial = false;\n    expect(temMundial).toBeFalsy();\n  });\n\n  test("Deve conter todos os valores do objeto fornecido", () => {\n    const meuObjeto = {\n      nome: "Palmeiras",\n      temMundial: false,\n      cor: "Verde",\n    };\n    expect(meuObjeto).toEqual({\n      nome: "Palmeiras",\n      temMundial: false,\n      cor: "Verde",\n    });\n  });\n});\n')),(0,n.kt)("p",null,"Agora vou abrir o terminal e executar ",(0,n.kt)("inlineCode",{parentName:"p"},"npm run test"),", e o Vitest ir\xe1 executar e retornar todos esses cen\xe1rios no terminal, verde caso tenha passado, e vermelho caso tenha reprovado algum."),(0,n.kt)("h3",{id:"sucesso"},"Sucesso"),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(6433).Z,width:"664",height:"302"})),(0,n.kt)("h3",{id:"erro"},"Erro"),(0,n.kt)("p",null,"Adicionei um campo a mais no objeto do \xfaltimo teste, ",(0,n.kt)("strong",{parentName:"p"},"por\xe9m n\xe3o adicionei no expect"),", logo o teste fez a compara\xe7\xe3o e reprovou, pois os objetos n\xe3o s\xe3o mais iguais."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Veja como a inteface \xe9 amig\xe1vel, ela exibe com muita clareza qual teste reprovou e o motivo.")),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(527).Z,width:"942",height:"564"})),(0,n.kt)("h2",{id:"resumo"},"Resumo"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Preciso saber em qual cen\xe1rio vou escrever meus testes, se \xe9 frontend ou backend, pois cada um possu\xed a ferramenta certa para o cen\xe1rio."),(0,n.kt)("li",{parentName:"ul"},"Se eu ainda n\xe3o sei testar, devo procurar o framework mais f\xe1cil para aprender. Nesse caso foi o Vitest, pois ele tem uma filosofia ",(0,n.kt)("strong",{parentName:"li"},"less config"),"."),(0,n.kt)("li",{parentName:"ul"},"A documenta\xe7\xe3o cont\xe9m tudo que preciso para configurar o framework, e ainda cont\xe9m v\xe1rios exemplos."),(0,n.kt)("li",{parentName:"ul"},"O Vitest procura por arquivos que tenham a extens\xe3o ",(0,n.kt)("strong",{parentName:"li"},".test.ts"),"."),(0,n.kt)("li",{parentName:"ul"},"Os resultados dos testes s\xe3o exibidos no terminal, de uma forma muito amig\xe1vel."),(0,n.kt)("li",{parentName:"ul"},"Posso executar o comando ",(0,n.kt)("inlineCode",{parentName:"li"},"npm run test")," quantas vezes quiser, e o teste executar\xe1 em mil\xe9simos de segundos."),(0,n.kt)("li",{parentName:"ul"},"Automatizar \xe9 bem melhor que testar manualmente.")),(0,n.kt)("h3",{id:"reposit\xf3rio-com-o-c\xf3digo"},"Reposit\xf3rio com o c\xf3digo"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/mrbrunelli/vitest-typescript-example/tree/aprenda-a-testar-parte-2"},"https://github.com/mrbrunelli/vitest-typescript-example/tree/aprenda-a-testar-parte-2")))}d.isMDXComponent=!0},527:function(e,t,o){t.Z=o.p+"assets/images/vitest-error-6e60e31933520b832c84088fbbab24d9.png"},6433:function(e,t,o){t.Z=o.p+"assets/images/vitest-sucess-20feb8caef2209546910c0cbe62f35de.png"}}]);